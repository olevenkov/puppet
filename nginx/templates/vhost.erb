<% if app_servers.any? %>
upstream <%= name %> {
  <% app_servers.each do |server| %>
  server <%= server %>;
  <% end %>
}
<% end %>

server {
  <% if http_basic_auth  %>
  auth_basic <%= name %>;
  auth_basic_user_file conf.d/<%= name %>.htpasswd;
  <% end %>

  <% if ipv6_enable %>
  listen [<%= ipv6_listen %>]:<%= ipv6_listen_port %> ipv6only=on;
  <% end %>
  listen <%= listen %>:<%= listen_port %>;

  server_name <%= server_names.join(' ') %>;

  access_log /var/log/nginx/<%= name %>-access.log;
  error_log /var/log/nginx/<%= name %>-error.log;

  root <%= www_root %>;
  index <%= index_files.join(' ') %>;

  <% if ssl_enable && ssl_cert && ssl_cert_key %>
    ssl on;
    ssl_certificate <%= ssl_cert %>;
    ssl_certificate_key <%= ssl_cert_key %>;

    ssl_session_timeout  5m;

    ssl_protocols  SSLv3 TLSv1;
    ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv3:+EXP;
    ssl_prefer_server_ciphers   on;
  <% end %>

  <% if app_servers.any? %>
  # Prefer to serve static files directly from nginx to avoid unnecessary
  # data copies from the application server.
  #
  # try_files directive appeared in in nginx 0.7.27 and has stabilized
  # over time.  Older versions of nginx (e.g. 0.6.x) requires
  # "if (!-f $request_filename)" which was less efficient:
  # http://bogomips.org/unicorn.git/tree/examples/nginx.conf?id=v3.3.1#n127
  try_files $uri $uri/index.html $uri.html @app;

  location @app {
    # an HTTP header important enough to have its own Wikipedia entry:
    #   http://en.wikipedia.org/wiki/X-Forwarded-For
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    <% if ssl_enable && ssl_cert && ssl_cert_key %>
    # enable this if you forward HTTPS traffic to unicorn,
    # this helps Rack set the proper URL scheme for doing redirects:
    proxy_set_header X-Forwarded-Proto $scheme;
    <% end %>

    # pass the Host: header from the client right along so redirects
    # can be set properly within the Rack application
    proxy_set_header Host $http_host;

    # we don't want nginx trying to do something clever with
    # redirects, we set the Host: header above already.
    proxy_redirect off;

    <% if proxy_buffering_off %>
    # set "proxy_buffering off" *only* for Rainbows! when doing
    # Comet/long-poll/streaming.  It's also safe to set if you're using
    # only serving fast clients with Unicorn + nginx, but not slow
    # clients.  You normally want nginx to buffer responses to slow
    # clients, even with Rails 3.1 streaming because otherwise a slow
    # client can become a bottleneck of Unicorn.
    #
    # The Rack application may also set "X-Accel-Buffering (yes|no)"
    # in the response headers do disable/enable buffering on a
    # per-response basis.
    proxy_buffering off;
    <% end %>

    proxy_pass http://<%= name %>;
    proxy_read_timeout 90;
  }
  <% end %>
}

